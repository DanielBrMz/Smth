/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
    endorsers: EndorserAuthOperations;
  };
  collections: {
    users: User;
    endorsers: Endorser;
    insights: Insight;
    audience: Audience;
    media: Media;
    contents: Content;
    'api-keys': ApiKey;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    endorsers: EndorsersSelect<false> | EndorsersSelect<true>;
    insights: InsightsSelect<false> | InsightsSelect<true>;
    audience: AudienceSelect<false> | AudienceSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    contents: ContentsSelect<false> | ContentsSelect<true>;
    'api-keys': ApiKeysSelect<false> | ApiKeysSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user:
    | (User & {
        collection: 'users';
      })
    | (Endorser & {
        collection: 'endorsers';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface EndorserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  lastName?: string | null;
  username?: string | null;
  phoneNumber: string;
  role?: ('admin' | 'reviewer')[] | null;
  profilePicture?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "endorsers".
 */
export interface Endorser {
  id: number;
  name?: string | null;
  lastName?: string | null;
  phoneNumber: string;
  profilePicture?: (number | null) | Media;
  username?: string | null;
  referralCode?: string | null;
  audienceMembers?: (number | Audience)[] | null;
  audienceStats?: {
    total?: number | null;
    stats?: {
      employment?:
        | {
            type?: string | null;
            count?: number | null;
            pct?: number | null;
            id?: string | null;
          }[]
        | null;
      income?:
        | {
            range?: string | null;
            count?: number | null;
            pct?: number | null;
            id?: string | null;
          }[]
        | null;
      experience?:
        | {
            level?: string | null;
            count?: number | null;
            pct?: number | null;
            id?: string | null;
          }[]
        | null;
      location?:
        | {
            state?: string | null;
            count?: number | null;
            pct?: number | null;
            id?: string | null;
          }[]
        | null;
      worth?:
        | {
            range?: string | null;
            count?: number | null;
            pct?: number | null;
            id?: string | null;
          }[]
        | null;
    };
    activity?: {
      active?: number | null;
      inactive?: number | null;
      growth?: number | null;
    };
    updated?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "audience".
 */
export interface Audience {
  id: number;
  mainAppUserId: string;
  endorser: number | Endorser;
  employmentStatus: 'EMPLOYED' | 'SELF_EMPLOYED' | 'RETIRED' | 'STUDENT' | 'OTHER';
  incomeRange: 'ZERO' | 'ONE' | 'TWO' | 'THREE' | 'FOUR' | 'FIVE' | 'SIX';
  investmentExperience: 'NONE' | 'LIMITED' | 'GOOD' | 'EXTENSIVE';
  state: string;
  netWorth: 'ZERO' | 'ONE' | 'TWO' | 'THREE' | 'FOUR' | 'FIVE' | 'SIX';
  status?: ('ACTIVE' | 'INACTIVE') | null;
  lastActive?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "insights".
 */
export interface Insight {
  id: number;
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  contents?: (number | null) | Content;
  insight_location:
    | 'Welcome Video'
    | 'Account Onboarding Account Onboarding Start'
    | 'Account Onboarding Address'
    | 'Account Onboarding Annual Income'
    | 'Account Onboarding Brokerage Accounts'
    | 'Account Onboarding Choose Account Type'
    | 'Account Onboarding Citizenship Status'
    | 'Account Onboarding Disclosures'
    | 'Account Onboarding Employment Status'
    | 'Account Onboarding Investment Experience'
    | 'Account Onboarding Investment Goal'
    | 'Account Onboarding Liquid Net Worth'
    | 'Account Onboarding Retirement Accounts'
    | 'Account Onboarding Risk Tolerance'
    | 'Account Onboarding Tax Filing Status'
    | 'Account Onboarding Time Horizon'
    | 'Account Onboarding Total Net Worth'
    | 'Account Onboarding Trusted Contact'
    | 'Account Onboarding Verify Identity'
    | 'Explore Growth Sidepockets'
    | 'Explore Income Sidepockets'
    | 'Explore Model Sidepocket'
    | 'Explore Preservation Sidepockets'
    | 'Explore Speculative Sidepockets'
    | 'Explore Which Sidepocket is right for me?'
    | 'Funding Funding Schedule'
    | 'Funding One-time Transaction'
    | 'Menu Account Value'
    | 'Menu Available for Withdrawal'
    | 'Menu Buying Power'
    | 'Menu Explore'
    | 'Menu Funding'
    | 'Menu My Sidepockets'
    | 'Menu Sidepocket Premier'
    | 'Menu Sidepocket Value'
    | 'My Sidepocket Add Account'
    | 'My Sidepocket Dow Jones ETF'
    | 'My Sidepocket Live Sidepocket List'
    | 'My Sidepocket Live User Sidepocket'
    | 'My Sidepocket S&P 500 ETF'
    | 'My Sidepocket Transactions'
    | 'My Sidepocket QQQ ETF'
    | 'Onboarding 30 Day Access Screen'
    | 'Onboarding Sign Up Screen'
    | 'Onboarding Splash Screen'
    | 'Subscription Selection All Access Subscription'
    | 'Subscription Selection Lite Subscription';
  review_status: 'todo' | 'sent_to_review' | 'in_progress' | 'rejected' | 'approved' | 'changes_requested';
  review_assignee?: (number | null) | User;
  state: 'Draft' | 'Ready for Review' | 'Approved' | 'Rejected' | 'Published';
  review_commentary?: string | null;
  metadata:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  createdBy?: (number | null) | Endorser;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contents".
 */
export interface Content {
  id: number;
  filename: string;
  key: string;
  alt?: string | null;
  mimeType: string;
  filesize: number;
  url: string;
  streamingUrl?: string | null;
  createdBy?: (number | null) | Endorser;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "api-keys".
 */
export interface ApiKey {
  id: number;
  name: string;
  key?: string | null;
  createdBy: number | User;
  lastUsed?: string | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'endorsers';
        value: number | Endorser;
      } | null)
    | ({
        relationTo: 'insights';
        value: number | Insight;
      } | null)
    | ({
        relationTo: 'audience';
        value: number | Audience;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'contents';
        value: number | Content;
      } | null)
    | ({
        relationTo: 'api-keys';
        value: number | ApiKey;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'endorsers';
        value: number | Endorser;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'endorsers';
        value: number | Endorser;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  lastName?: T;
  username?: T;
  phoneNumber?: T;
  role?: T;
  profilePicture?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "endorsers_select".
 */
export interface EndorsersSelect<T extends boolean = true> {
  name?: T;
  lastName?: T;
  phoneNumber?: T;
  profilePicture?: T;
  username?: T;
  referralCode?: T;
  audienceMembers?: T;
  audienceStats?:
    | T
    | {
        total?: T;
        stats?:
          | T
          | {
              employment?:
                | T
                | {
                    type?: T;
                    count?: T;
                    pct?: T;
                    id?: T;
                  };
              income?:
                | T
                | {
                    range?: T;
                    count?: T;
                    pct?: T;
                    id?: T;
                  };
              experience?:
                | T
                | {
                    level?: T;
                    count?: T;
                    pct?: T;
                    id?: T;
                  };
              location?:
                | T
                | {
                    state?: T;
                    count?: T;
                    pct?: T;
                    id?: T;
                  };
              worth?:
                | T
                | {
                    range?: T;
                    count?: T;
                    pct?: T;
                    id?: T;
                  };
            };
        activity?:
          | T
          | {
              active?: T;
              inactive?: T;
              growth?: T;
            };
        updated?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "insights_select".
 */
export interface InsightsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  contents?: T;
  insight_location?: T;
  review_status?: T;
  review_assignee?: T;
  state?: T;
  review_commentary?: T;
  metadata?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "audience_select".
 */
export interface AudienceSelect<T extends boolean = true> {
  mainAppUserId?: T;
  endorser?: T;
  employmentStatus?: T;
  incomeRange?: T;
  investmentExperience?: T;
  state?: T;
  netWorth?: T;
  status?: T;
  lastActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contents_select".
 */
export interface ContentsSelect<T extends boolean = true> {
  filename?: T;
  key?: T;
  alt?: T;
  mimeType?: T;
  filesize?: T;
  url?: T;
  streamingUrl?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "api-keys_select".
 */
export interface ApiKeysSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  createdBy?: T;
  lastUsed?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}